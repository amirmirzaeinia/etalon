--- linux-3.16.3-clean/kernel/time.c	2014-09-17 11:22:16.000000000 -0600
+++ ./linux-3.16.3-vtmininet/kernel/time.c	2017-08-29 10:02:36.884974380 -0600
@@ -38,6 +38,7 @@
 #include <linux/math64.h>
 #include <linux/ptrace.h>

+#include <linux/rcupdate.h> // for accessing current's parent
 #include <asm/uaccess.h>
 #include <asm/unistd.h>
 
@@ -115,6 +224,51 @@ SYSCALL_DEFINE2(gettimeofday, struct tim
 }
 
 /*
+ * Change current process's time dilation factor
+ */
+SYSCALL_DEFINE2(settimedilationfactor, unsigned long, dilation, pid_t, ppid)
+{
+	if (dilation > 0) {
+		struct task_struct *task = current;
+
+		if (ppid != 0) { // change current's parent's dilation
+			rcu_read_lock();
+			task = rcu_dereference(current->real_parent);
+
+			/* pid_t == __kernel_pid_t == int */
+			if (!task || task->pid != ppid) {
+				rcu_read_unlock();
+				return -1;
+			}          
+		}
+
+		/* reset virtual_start so that we can get original time */
+		task->virtual_start_nsec = 0;
+		struct timespec ts;
+		getnstimeofday(&ts);
+		task->virtual_start_nsec = timespec_to_ns(&ts);
+
+		task->dilation = dilation;
+
+		if (ppid != 0) {
+			rcu_read_unlock();
+		}
+	}
+	return 0;
+}
+
+
+SYSCALL_DEFINE(gettimedilation)
+{
+	return current->dilation;
+}
+
+SYSCALL_DEFINE(getstartvirtualtime)
+{
+	return current->virtual_start_nsec;
+}
+
+/*
  * Indicates if there is an offset between the system clock and the hardware
  * clock/persistent clock/rtc.
  */
